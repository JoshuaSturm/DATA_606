djia.parsed <- htmlParse(getURL(djia.url), asText = T)
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
datatable(tabl1)
library(RCurl)
library(XML)
library(stringr)
djia.parsed <- htmlParse(getURL(djia.url), asText = T)
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
tabl1 <- datatable(tabl1)
tabl1
names(tabl1)
tabl1$x$selection$target
typeof(tabl1)
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
tabl1
names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
tabl1
names(tabl1) <- names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
tabl1
tabl1 <- datatable(tabl1)
tabl1
rename(tabl1, Change = "Dollar_Change", __Change = "Percent_Change")
rename(tabl1, Change = "Dollar_Change")
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
names(tabl1) <- names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
rename(tabl1, Change = "Dollar_Change")
rename(tabl1, Dollar_Change = "Change", Percent_Change = "__Change")
tabl1 <- datatable(tabl1)
tabl1
library(RCurl)
library(XML)
library(stringr)
djia.parsed <- htmlParse(getURL(djia.url), asText = T)
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
names(tabl1) <- names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
tabl1 <- rename(tabl1, Dollar_Change = "Change", Percent_Change = "__Change")
tabl1 <- datatable(tabl1)
tabl1
knitr::opts_chunk$set(echo = T,
cache = T,
stringsAsFactors = F)
library(tidyverse)
library(httr)
library(timeDate)
library(RCurl)
library(Quandl)
library(XML)
library(DT)
library(rvest)
library(stringr)
library(ggplot2)
djia.url <- "https://finance.yahoo.com/quote/%5EDJI/components?p=%5EDJI"
djia.parsed <- htmlParse(getURL(djia.url), asText = T)
tabl1 <- readHTMLTable(djia.parsed, stringsAsFactors = F)
tabl1 <- data.frame(tabl1) %>%
select(3:8)
names(tabl1) <- names(tabl1) %>%
str_replace_all("NULL[[:punct:]]", " ") %>%
str_replace_all("\\.", "_") %>%
str_trim()
tabl1 <- rename(tabl1, Dollar_Change = "Change", Percent_Change = "__Change")
tabl1
#
# Pick a stock at random from the DJIA
#
cmdty <- sample(tabl1$Symbol, 1)
#
# Register Quandl API Key
#
quandl.api.key <- read.table("quandl_api.txt", stringsAsFactors=F)[[2]]
Quandl.api_key(quandl.api.key)
#
# 5 day average, only including weekdays. Reference: https://stackoverflow.com/questions/13673895/r-time-series-data-daily-only-working-days
#
Quandl.datatable('WIKI/PRICES', date=, ticker=cmdty)
tW
tS <- timeSequence(Sys.Date()-7, Sys.Date())
tS
# Subset weekdays
tW <- tS[isWeekday(tS)]; tW
dayOfWeek(tW)
tW
typeof(tW)
typeof(tS)
class(tW)
Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
Quandl.datatable('WIKI/PRICES', date=weekly, ticker=cmdty)
Quandl.datatable('WIKI/PRICES', collapse=weekly, ticker=cmdty)
Quandl.datatable('WIKI/PRICES', collapse='weekly', ticker=cmdty)
Quandl.datatable('WIKI/PRICES', date='weekly', ticker=cmdty)
Quandl.datatable('WIKI/PRICES', date='weekly', ticker=cmdty)
unlist(tW)
as.list(tW)
as.matrix(tW)
tW <- as.list(tW)
tW
unlist(tW)
Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
#
# Pick a stock at random from the DJIA
#
cmdty <- sample(tabl1$Symbol, 1)
#
# Register Quandl API Key
#
quandl.api.key <- read.table("quandl_api.txt", stringsAsFactors=F)[[2]]
Quandl.api_key(quandl.api.key)
#
# 5 day average, only including weekdays. Reference: https://stackoverflow.com/questions/13673895/r-time-series-data-daily-only-working-days
#
tS <- timeSequence(Sys.Date()-7, Sys.Date())
tS
# Subset weekdays
tW <- tS[isWeekday(tS)]; tW
dayOfWeek(tW)
Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
#
# Pick a stock at random from the DJIA
#
cmdty <- sample(tabl1$Symbol, 1)
#
# Register Quandl API Key
#
quandl.api.key <- read.table("quandl_api.txt", stringsAsFactors=F)[[2]]
Quandl.api_key(quandl.api.key)
#
# 5 day average, only including weekdays. Reference: https://stackoverflow.com/questions/13673895/r-time-series-data-daily-only-working-days
#
tS <- timeSequence(Sys.Date()-7, Sys.Date())
tS
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
#dayOfWeek(tW)
Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt
nrow(qdt)
nrow(qdt$close)
NROW(qdt$close)
length(qdt$close)
fdma <- sum(qdt$close)/NROW(qdt$close)
ggplot(qdt, aes(date, fdma)) +
geom_line() +
scale_x_date() +
xlab('Date') +
ylab('Closing Price') +
title('Five day moving average')
ggplot(qdt, aes(date, fdma)) +
geom_line() +
scale_x_date() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
#
# Pick a stock at random from the DJIA
#
cmdty <- sample(tabl1$Symbol, 1)
#
# Register Quandl API Key
#
quandl.api.key <- read.table("quandl_api.txt", stringsAsFactors=F)[[2]]
Quandl.api_key(quandl.api.key)
#
# 5 day average, only including weekdays. Reference: https://stackoverflow.com/questions/13673895/r-time-series-data-daily-only-working-days
#
tS <- timeSequence(Sys.Date()-20, Sys.Date())
tS
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
#dayOfWeek(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
fdma <- sum(qdt$close)/NROW(qdt$close)
ggplot(qdt, aes(date, fdma)) +
geom_line() +
scale_x_date() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, fdma)) +
geom_line() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, fdma)) +
geom_line() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, fdma)) +
geom_line() +
ylim(131, 132) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, fdma)) +
geom_line(aes(colour = 'Five Day Moving Average')) +
ylim(131, 132) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line()
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_datetime() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(breaks = 5) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(breaks = 3) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = 5) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = week) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = weekdays()) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
scale_x_date(date_breaks = weekdays +
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = weekdays) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = weekdays) +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(date_breaks = '1 week') +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date() +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(breaks = '1 day') +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(breaks = 'one day') +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
ggplot(qdt, aes(date, close)) +
geom_line(aes(colour = 'Five Day Moving Average (Closing Price)')) +
geom_line() +
scale_x_date(breaks = '1 day') +
labs(title = 'Five Day Moving Average', x = 'Date', y = 'Closing Price')
libary(plotly)
library(plotly)
packageVersion('Plotly')
today <- Sys.Date()
tm <- seq(0, 7, by = 1)
x <- today - tm
y <- rnorm(length(x))
p <- plot_ly(x = ~x, y = ~y, mode = 'lines', text = paste(tm, "days from today"))
p
today <- Sys.Date()
tm <- tW
x <- today - tm
install.packages("tidyquant")
library(tidyquant)
qdt %>%
tq_mutate(ohlc_fun = Cl, mutate_fun = SMA, n = 5)
qdt %>%
tq_mutate(select = Cl, mutate_fun = SMA, n = 5)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
View(qdt)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5)
tS <- timeSequence(Sys.Date()-7, Sys.Date())
tW <- as.list(tW)
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
View(qdt)
View(qdt)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 4)
tS <- timeSequence(Sys.Date()-30, Sys.Date())
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5)
qdt %>%
tq_mutate(select = 2, mutate_fun = SMA, n = 5)
qdt %>%
tq_mutate(select = 3, mutate_fun = SMA, n = 5)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5)
qdt
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.15 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.50 = SMA)
tS <- timeSequence(Sys.Date()-40, Sys.Date())
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.15 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.50 = SMA)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA)
qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
qdt <- qdt %>%
ggplot(aes(x = date, y = price, col = type)) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
qdt
qdt <- qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
tS <- timeSequence(Sys.Date()-40, Sys.Date())
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt <- qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
qdt <- qdt %>%
ggplot(aes(x = date, y = price, col = type)) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
qdt
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = factor(type, labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')))) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = (type, labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')))) +
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = factor(type, labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')))) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
tS <- timeSequence(Sys.Date()-40, Sys.Date())
# Subset weekdays
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt <- qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Average', x = 'Date', y = 'Closing Price')
qdt
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Averages for'cmdty, x = 'Date', y = 'Closing Price')
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Averages for'+cmdty, x = 'Date', y = 'Closing Price')
qdt <- qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
tS <- timeSequence(Sys.Date()-40, Sys.Date())
tW <- tS[isWeekday(tS)]
tW <- as.list(tW)
qdt <- Quandl.datatable('WIKI/PRICES', date=tW, ticker=cmdty)
qdt <- qdt %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 5) %>%
rename(SMA.5 = SMA) %>%
tq_mutate(select = 6, mutate_fun = SMA, n = 20) %>%
rename(SMA.20 = SMA) %>%
select(date, close, SMA.5, SMA.20) %>%
gather(key = type, value = price, close:SMA.20)
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Averages for'+cmdty, x = 'Date', y = 'Closing Price')
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
geom_line() +
labs(title = 'Moving Averages', x = 'Date', y = 'Closing Price')
qdt
warnings()
plot.title <- 'Moving Averages for' `r cmdty`
plot.title <- 'Moving Averages for' cmdty
plot.title <- "'Moving Averages for' cmdty".
plot.title <- "'Moving Averages for' cmdty"
plot.title
cmdty
plot.title <- "'Moving Averages for' `r cmdty`"
cmdty
plot.title
knitr::opts_chunk$set(echo = T,
cache = T,
warning = F,
message = F,
stringsAsFactors = F)
plot.title <- paste('Moving Averages for ', cmdty)
plot.title
plot.title <- paste('Moving Averages for', cmdty)
plot.title
qdt <- qdt %>%
ggplot(aes(x = date, y = price, colour = type)) +
geom_line() +
scale_color_hue(labels = c('Closing Price', '20 Day Moving Average', '5 Day Moving Average')) +
labs(title = paste('Moving Averages for', cmdty), x = 'Date', y = 'Closing Price')
knitr::opts_chunk$set(echo = T, warning = F, message = F)
knitr::opts_chunk$set(echo = T, warning = F, message = F)
x0 <- 107.2
y0 <- 171.14
sx <- 10.37
sy <- 9.41
r <- 0.67
b1 <- (sy / sx) * r
b0 <- y0 - (b1 * x0)
r^2
160−166.7625805
setwd("~/GitHub/CUNY_MSDS/Fall_2017/DATA_606/Homework 7")
(3.9983 - 4.010) / -0.0883
