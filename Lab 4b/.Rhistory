df <- data.frame(dp,ds)
ggplot(df) +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
dp <- dnorm(seq(6000,12000), mean, sd)
ds <- dnorm(seq(6000,12000), mean, SE)
df <- data.frame(dp,ds)
ggplot(df) +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
dp <- dnorm(seq(6000,12000), mean, sd)
ds <- dnorm(seq(6000,12000), mean, SE)
df <- data.frame(dp,ds)
ggplot(df) +
geom_density(aes(dp)) +
geom_density(aes(ds))
n <- 507
mean <- 171.1
sd <- 9.4
shorter <- 155
taller <- 180
# Calculate z-scores:
z_shorter <- (shorter - mean) / sd
z_taller <- (taller - mean) / sd
z_shorter
z_taller
SE <- sd / sqrt(n)
SE
confl <- 80.31
confu <- 89.11
moe <- (confu - confl) / 2
moe
n <- 36
mean <- 30.69
sd <- 4.31
SE <- sd / sqrt(n)
z <- ((mean - 32)/SE)
pnorm(z)
confl <- mean - (1.65 * SE)
confu <- mean + (1.65 * SE)
cat(confl,confu)
n <- 36
mean <- 118.2
sd <- 6.5
SE <- sd/sqrt(n)
z <- ((mean - 100)/SE)
2*(1-pnorm(z)) # symmetric
confl <- mean - (1.65 * SE)
confu <- mean + (1.65 * SE)
cat(confl,confu)
n <- 10500
mean <- 9000
sd <- 1000
z = (n - mean)/sd
# since we want x > 10,500, we look for 1-pnorm(z)
1-pnorm(z)
SE <- sd/sqrt(15)
SE
z <- (n - mean)/SE
# Since we want x > 10,500, we look for 1-pnorm(z)
1-pnorm(z)
library(ggplot2)
dp <- dnorm(seq(6000,12000), mean, sd)
ds <- dnorm(seq(6000,12000), mean, SE)
df <- data.frame(dp,ds)
ggplot(df) +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
dp <- dnorm(seq(6000,12000), mean, sd)
ds <- dnorm(seq(6000,12000), mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000:15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000,100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000,length=100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(6000,11000,length=100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(6000,12000,length=100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(6000,12000,length=100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(ds)) +
geom_density(aes(dp))
library(ggplot2)
seq <- seq(6000,12000,length=100)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
#df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
#df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp, ds)) +
geom_density(aes(ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
#df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp, ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(dp, ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(x = dp, y= ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(x = dp, ylim = ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(seq), dp, ds)
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_stat(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(seq))
seq <- seq(5000,15000)
ggplot() +
geom_density(aes(seq))
ggplot(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_density(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds))
library(ggplot2)
seq <- seq(5000,15000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(5000,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(7000,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6000,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6500,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(600,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6000,12500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(7000,11000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(7500,11500)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp))
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds)) +
geom_line(aes(seq,dp)) +
legend("topright", inset=.05, title="Distributions", c('Population','Sample'), lwd=2, col=c('blue','red'))
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds, color = "blue")) +
geom_line(aes(seq,dp, color = "red"))
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds, color = "blue")) +
geom_line(aes(seq,dp, color = "red")) +
labs(x = "Hours", y = "Density")
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
#df <- data.frame(dp,ds)
ggplot() +
geom_line(aes(seq, ds, color = "blue")) +
geom_line(aes(seq,dp, color = "red")) +
labs(x = "Hours", y = "Density")
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
ggplot() +
geom_line(aes(seq, ds, color = "blue")) +
geom_line(aes(seq,dp, color = "red")) +
scale_fill_manual(dp, ds)
labs(x = "Hours", y = "Density")
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
ggplot() +
geom_line(aes(seq, ds, color = "Population")) +
geom_line(aes(seq,dp, color = "red")) +
scale_fill_manual(dp, ds)
labs(x = "Hours", y = "Density")
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
ggplot() +
geom_line(aes(seq, ds, color = "Population")) +
geom_line(aes(seq,dp, color = "Sample")) +
scale_fill_manual(dp, ds)
labs(x = "Hours", y = "Density")
library(ggplot2)
seq <- seq(6000,12000)
dp <- dnorm(seq, mean, sd)
ds <- dnorm(seq, mean, SE)
ggplot() +
geom_line(aes(seq, ds, color = "Population")) +
geom_line(aes(seq,dp, color = "Sample")) +
labs(x = "Hours", y = "Density")
setwd("~/GitHub/CUNY_MSDA/Fall_2017/DATA_606/Lab 4b")
install.packages("data.table")
load("more/ames.RData")
population <- ames$Gr.Liv.Area
# To keep results consistent, we can use set.seed
set.seed(6092)
samp <- sample(population, 60)
summary(samp)
hist(samp)
summary(samp)
hist(samp)
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
load("more/ames.RData")
population <- ames$Gr.Liv.Area
# To keep results consistent, we can use set.seed
set.seed(6092)
samp <- sample(population, 60)
summary(samp)
hist(samp)
sample_mean <- mean(samp)
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
mean(population)
mean(population)
plot_ci(lower_vector, upper_vector, mean(population))
load("more/ames.RData")
population <- ames$Gr.Liv.Area
# To keep results consistent, we can use set.seed
set.seed(6092)
samp <- sample(population, 60)
summary(samp)
hist(samp)
sample_mean <- mean(samp)
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
plot_ci(lower_vector, upper_vector, mean(population))
plot_ci(lower_vector, upper_vector, mean(population))
plot_ci(lower_vector, upper_vector, mean(population))
1 - 0.10/2
qnorm(0.95)
1-0.02/2
qnorm(0.99)
1-0.02/2
#For the 98% confidence interval:
1 - \frac{0.02}{2}.
#For the 98% confidence interval:
a <- 1 - 0.02/2
qnorm(a)
load("more/ames.RData")
population <- ames$Gr.Liv.Area
# To keep results consistent, we can use set.seed
set.seed(6092)
samp <- sample(population, 60)
summary(samp)
hist(samp)
sample_mean <- mean(samp)
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
plot_ci(lower_vector, upper_vector, mean(population))
#  For the 98% confidence interval:
a <- 1 - 0.02/2
qnorm(a)
# The critical value is 2.326
lower_vector <- samp_mean - 2.326 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 2/326 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - 2.326 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 2.326 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
